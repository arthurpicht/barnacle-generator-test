//// DO NOT CHANGE THIS FILE MANUALLY!
//package de.arthurpicht.barnacleGeneratorTest.tc_05.persistence.dao;
//
//import de.arthurpicht.barnacleGeneratorTest.connectionManager.ConnectionManager;
//import de.arthurpicht.barnacleGeneratorTest.connectionManager.DataSourceException;
//import de.arthurpicht.barnacleGeneratorTest.connectionManager.EntityNotFoundException;
//import de.arthurpicht.barnacleGeneratorTest.tc_05.persistence.vo.AddressVO;
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//
//import java.sql.*;
//import java.util.ArrayList;
//import java.util.List;
//
///**
// * Generated by Barnacle Version 0.3.0-SNAPSHOT (2023-02-12) on 07.03.2023 18:47:45
// * https://github.com/arthurpicht/Barnacle
// * created 2007 - 2023 by Arthur Picht, Düren and Düsseldorf, Germany
// *
// * DO NOT CHANGE THIS FILE MANUALLY!
// */
//public class AddressDAOPrep {
//
//	private static final Logger logger = LoggerFactory.getLogger(AddressDAOPrep.class);
//
//	private static final String CREATE_STATEMENT = "INSERT INTO address (userId, email) VALUES (?, ?)";
//	private static final String LOAD_STATEMENT = "SELECT * FROM address WHERE userId = ?";
//	private static final String DELETE_STATEMENT = "DELETE FROM address WHERE userId = ?";
//	private static final String UPDATE_STATEMENT = "UPDATE address SET email = ? WHERE userId = ?";
//	private static final String FIND_ALL_STATEMENT = "SELECT * FROM address";
//
//	private static final String FK_ADDRESS_1_STATEMENT = "SELECT * FROM address WHERE userId = ?";
//
//	public static List<AddressVO> findByFk_address_1(String userId) throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			return findByFk_address_1(userId, connection);
//		} catch (SQLException e) {
//			throw new DataSourceException(e);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static List<AddressVO> findByFk_address_1(String userId, Connection connection) throws SQLException {
//		PreparedStatement preparedStatement = connection.prepareStatement(FK_ADDRESS_1_STATEMENT);
//		preparedStatement.setString(1, userId);
//		logger.debug(FK_ADDRESS_1_STATEMENT);
//		ResultSet resultSet = preparedStatement.executeQuery();
//		List<AddressVO> addressVOs = new ArrayList<>();
//		try {
//			while (resultSet.next()) {
//				String email = resultSet.getString(AddressVO.EMAIL);
//				AddressVO addressVO = new AddressVO(userId);
//				addressVO.setEmail(email);
//				addressVOs.add(addressVO);
//			}
//			return addressVOs;
//		} finally {
//			if (resultSet != null) { try { resultSet.close(); } catch (SQLException ignored) {}}
//			try { preparedStatement.close(); } catch (SQLException ignored) {}
//		}
//	}
//
//	public static List<AddressVO> deprecatedFindByFk_address_1(String userId) throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAO.class);
//		Statement statement = null;
//		ResultSet resultSet = null;
//		try {
//			statement = connection.createStatement();
//			String sql = "SELECT * FROM " + AddressVO.TABLENAME + " WHERE "
//					+ AddressVO.USERID + " = " + getValueExpression(userId, "VARCHAR(255)");
//			logger.debug(sql);
//			resultSet = statement.executeQuery(sql);
//			List<AddressVO> addressVOList = new ArrayList<AddressVO>();
//			while (resultSet.next()) {
//				String email = resultSet.getString(AddressVO.EMAIL);
//				AddressVO addressVO = new AddressVO(userId);
//				addressVO.setEmail(email);
//				addressVOList.add(addressVO);
//			}
//			return addressVOList;
//		} catch (SQLException e) {
//			throw new DataSourceException(e);
//		} finally {
//			if (resultSet != null) { try { resultSet.close(); } catch (SQLException e) {}}
//			if (statement != null) { try { statement.close(); } catch (SQLException e) {}}
//			ConnectionManager.releaseConnection(connection, AddressDAO.class);
//		}
//	}
//
//	public static void create(AddressVO addressVO) throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			create(addressVO, connection);
//		} catch (SQLException sqlEx) {
//			throw new DataSourceException(sqlEx);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static void create(AddressVO addressVO, Connection connection) throws SQLException {
//		PreparedStatement preparedStatement = connection.prepareStatement(CREATE_STATEMENT);
//		preparedStatement.setString(1, addressVO.getUserId());
//		preparedStatement.setString(2, addressVO.getEmail());
//		logger.debug(CREATE_STATEMENT + " [" + addressVO.getUserId() + "][" + addressVO.getEmail() + "]");
//		preparedStatement.executeUpdate();
//		try { preparedStatement.close(); } catch (SQLException ignored) {}
//	}
//
//	public static void create(List<AddressVO> addressVOs) throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			create(addressVOs, connection);
//		} catch (SQLException sqlEx) {
//			throw new DataSourceException(sqlEx);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static void create(List<AddressVO> addressVOs, Connection connection) throws SQLException {
//		PreparedStatement preparedStatement = connection.prepareStatement(CREATE_STATEMENT);
//		for (AddressVO addressVO : addressVOs) {
//			preparedStatement.setString(1, addressVO.getUserId());
//			preparedStatement.setString(2, addressVO.getEmail());
//			logger.debug(CREATE_STATEMENT + " [" + addressVO.getUserId() + "][" + addressVO.getEmail() + "]");
//			preparedStatement.addBatch();
//		}
//		preparedStatement.executeBatch();
//		try { preparedStatement.close(); } catch (SQLException ignored) {}
//	}
//
//	public static AddressVO load(String userId) throws DataSourceException, EntityNotFoundException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			return load(userId, connection);
//		} catch(SQLException e) {
//			throw new DataSourceException(e);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static AddressVO load(String userId, Connection connection) throws SQLException, EntityNotFoundException {
//		PreparedStatement preparedStatement = connection.prepareStatement(LOAD_STATEMENT);
//		preparedStatement.setString(1, userId);
//		logger.debug(LOAD_STATEMENT + " [" + userId + "]");
//		ResultSet resultSet = preparedStatement.executeQuery();
//		try {
//			if (resultSet.next()) {
//				AddressVO addressVO = new AddressVO(userId);
//				addressVO.setEmail(resultSet.getString("email"));
//				return addressVO;
//			} else {
//				throw new EntityNotFoundException("Entity 'address' with primary key field 'userId' = [" + userId + "] not found!");
//			}
//		} finally {
//			if (resultSet != null) { try { resultSet.close(); } catch (SQLException ignored) {}}
//			try { preparedStatement.close(); } catch (SQLException ignored) {}
//		}
//	}
//
//	public static void delete(String userId) throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			delete(userId, connection);
//		} catch (SQLException e) {
//			throw new DataSourceException(e);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static void delete(String userId, Connection connection) throws SQLException {
//		PreparedStatement preparedStatement = connection.prepareStatement(DELETE_STATEMENT);
//		preparedStatement.setString(1, userId);
//		logger.debug(DELETE_STATEMENT + " [" + userId + "]");
//		preparedStatement.execute();
//		try { preparedStatement.close(); } catch (SQLException ignored) {}
//	}
//
//	public static void update(AddressVO addressVO) throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			update(addressVO, connection);
//		} catch (SQLException e) {
//			throw new DataSourceException(e);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static void update(AddressVO addressVO, Connection connection) throws SQLException {
//		PreparedStatement preparedStatement = connection.prepareStatement(UPDATE_STATEMENT);
//		preparedStatement.setString(1, addressVO.getEmail());
//		preparedStatement.setString(2, addressVO.getUserId());
//		logger.debug(UPDATE_STATEMENT + " [" + addressVO.getEmail() + "][" + addressVO.getUserId() + "]");
//		preparedStatement.executeUpdate();
//		try { preparedStatement.close(); } catch (SQLException ignored) {}
//	}
//
//	public static List<AddressVO> findAll() throws DataSourceException {
//		Connection connection = ConnectionManager.openConnection(AddressDAOPrep.class);
//		try {
//			return findAll(connection);
//		} catch (SQLException e) {
//			throw new DataSourceException(e);
//		} finally {
//			ConnectionManager.releaseConnection(connection, AddressDAOPrep.class);
//		}
//	}
//
//	public static List<AddressVO> findAll(Connection connection) throws SQLException {
//		Statement statement = connection.createStatement();
//		logger.debug(FIND_ALL_STATEMENT);
//		ResultSet resultSet = statement.executeQuery(FIND_ALL_STATEMENT);
//		List<AddressVO> addressVOs = new ArrayList<>();
//		try {
//			while (resultSet.next()) {
//				String userId = resultSet.getString(AddressVO.USERID);
//				String email = resultSet.getString(AddressVO.EMAIL);
//				AddressVO addressVO = new AddressVO(userId);
//				addressVO.setEmail(email);
//				addressVOs.add(addressVO);
//			}
//			return addressVOs;
//		} finally {
//			if (resultSet != null) { try { resultSet.close(); } catch (SQLException ignored) {}}
//			try { statement.close(); } catch (SQLException ignored) {}
//		}
//	}
//
//	private static String getValueExpression(Object o, String sqlType) {
//		if (o == null) { return "NULL"; }
//		if (sqlType.startsWith("VARCHAR") || sqlType.equals("DATE")) { return "'" + o + "'"; }
//		return "" + o;
//	}
//
//}
