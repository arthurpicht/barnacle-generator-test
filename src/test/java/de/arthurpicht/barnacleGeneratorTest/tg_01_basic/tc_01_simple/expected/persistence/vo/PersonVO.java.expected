// DO NOT CHANGE THIS FILE MANUALLY!
package de.arthurpicht.barnacleGeneratorTest.tg_01.tc_01.persistence.vo;

import de.arthurpicht.barnacleGeneratorTest.tg_01.tc_01.persistence.vof.PersonVOF;

public class PersonVO extends PersonVOF implements Cloneable {
	
	public static final String TABLENAME = "person";
	public static final String ID = "id";
	public static final String FIRSTNAME = "first_name";
	public static final String LASTNAME = "last_name";
	
	public PersonVO(String id) {
		this.id=id;
	}
	
	public String getId() {
		return this.id;
	}
	
	public void setId(String id) {
		this.id=id;
	}
	
	public String getFirstName() {
		return this.firstName;
	}
	
	public void setFirstName(String firstName) {
		this.firstName=firstName;
	}
	
	public String getLastName() {
		return this.lastName;
	}
	
	public void setLastName(String lastName) {
		this.lastName=lastName;
	}
	
	public String toString() {
		return "de.arthurpicht.barnacleGeneratorTest.tg_01.tc_01.persistence.vo.PersonVO["
			+ "id=" + this.id + "; "
			+ "firstName=" + this.firstName + "; "
			+ "lastName=" + this.lastName
			+ "]";
	}
	
	public Object clone() {
		try {
			return super.clone();
		} catch (CloneNotSupportedException e) {
			throw new InternalError();
		}
	}
	
	public boolean equals(Object o) {
		if (o == null) return false;
		if (o == this) return true;
		if (o.getClass() != this.getClass()) return false;
		PersonVO other = (PersonVO) o;
		if (this.id == null) {
			if (other.getId() != null) return false;
		} else {
			if (!this.id.equals(other.getId())) return false;
		}
		if (this.firstName == null) {
			if (other.getFirstName() != null) return false;
		} else {
			if (!this.firstName.equals(other.getFirstName())) return false;
		}
		if (this.lastName == null) {
			if (other.getLastName() != null) return false;
		} else {
			if (!this.lastName.equals(other.getLastName())) return false;
		}
		return true;
	}
	
}
