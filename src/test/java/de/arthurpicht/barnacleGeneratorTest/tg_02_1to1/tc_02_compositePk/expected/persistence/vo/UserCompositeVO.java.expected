// DO NOT CHANGE THIS FILE MANUALLY!
package de.arthurpicht.barnacleGeneratorTest.tg_02.tc_02.persistence.vo;

import de.arthurpicht.barnacleGeneratorTest.tg_02.tc_02.persistence.vof.UserCompositeVOF;
import de.arthurpicht.barnacleGeneratorTest.tg_02.tc_02.persistence.dao.AddressCompositeDAO;
import java.util.List;
import de.arthurpicht.barnacleGeneratorTest.connectionManager.DataSourceException;

public class UserCompositeVO extends UserCompositeVOF implements Cloneable {
	
	public static final String TABLENAME = "user_composite";
	public static final String ID1 = "id1";
	public static final String ID2 = "id2";
	public static final String USERNAME = "userName";
	
	public UserCompositeVO(UserCompositePK userCompositePK) {
		this.id1=userCompositePK.getId1();
		this.id2=userCompositePK.getId2();
	}
	
	public UserCompositePK getPK() {
		UserCompositePK userCompositePK = new UserCompositePK(this.id1, this.id2);
		return userCompositePK;
	}
	
	public String getId1() {
		return this.id1;
	}
	
	public void setId1(String id1) {
		this.id1=id1;
	}
	
	public String getId2() {
		return this.id2;
	}
	
	public void setId2(String id2) {
		this.id2=id2;
	}
	
	public String getUserName() {
		return this.userName;
	}
	
	public void setUserName(String userName) {
		this.userName=userName;
	}
	
	public String toString() {
		return "de.arthurpicht.barnacleGeneratorTest.tg_02.tc_02.persistence.vo.UserCompositeVO["
			+ "id1=" + this.id1 + "; "
			+ "id2=" + this.id2 + "; "
			+ "userName=" + this.userName
			+ "]";
	}
	
	public Object clone() {
		try {
			return super.clone();
		} catch (CloneNotSupportedException e) {
			throw new InternalError();
		}
	}
	
	public List<AddressCompositeVO> getAddressCompositeVOByFk_address_composite() throws DataSourceException {
		return AddressCompositeDAO.findByFk_address_composite(this.id1, this.id2);
	}
	
	public boolean equals(Object o) {
		if (o == null) return false;
		if (o == this) return true;
		if (o.getClass() != this.getClass()) return false;
		UserCompositeVO other = (UserCompositeVO) o;
		if (this.id1 == null) {
			if (other.getId1() != null) return false;
		} else {
			if (!this.id1.equals(other.getId1())) return false;
		}
		if (this.id2 == null) {
			if (other.getId2() != null) return false;
		} else {
			if (!this.id2.equals(other.getId2())) return false;
		}
		if (this.userName == null) {
			if (other.getUserName() != null) return false;
		} else {
			if (!this.userName.equals(other.getUserName())) return false;
		}
		return true;
	}
	
}
