// DO NOT CHANGE THIS FILE MANUALLY!
package de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.vo;

import de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.vof.CustomerVOF;
import de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.dao.CustomerItemDAO;
import java.util.List;
import de.arthurpicht.barnacleGeneratorTest.connectionManager.DataSourceException;

public class CustomerVO extends CustomerVOF implements Cloneable {
	
	public static final String TABLENAME = "customer";
	public static final String IDPART1 = "id_part_1";
	public static final String IDPART2 = "id_part_2";
	public static final String NAME = "name";
	
	public CustomerVO(CustomerPK customerPK) {
		this.idPart1=customerPK.getIdPart1();
		this.idPart2=customerPK.getIdPart2();
	}
	
	public CustomerPK getPK() {
		CustomerPK customerPK = new CustomerPK(this.idPart1, this.idPart2);
		return customerPK;
	}
	
	public String getIdPart1() {
		return this.idPart1;
	}
	
	public void setIdPart1(String idPart1) {
		this.idPart1=idPart1;
	}
	
	public String getIdPart2() {
		return this.idPart2;
	}
	
	public void setIdPart2(String idPart2) {
		this.idPart2=idPart2;
	}
	
	public String getName() {
		return this.name;
	}
	
	public void setName(String name) {
		this.name=name;
	}
	
	public String toString() {
		return "de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.vo.CustomerVO["
			+ "idPart1=" + this.idPart1 + "; "
			+ "idPart2=" + this.idPart2 + "; "
			+ "name=" + this.name
			+ "]";
	}
	
	public Object clone() {
		try {
			return super.clone();
		} catch (CloneNotSupportedException e) {
			throw new InternalError();
		}
	}
	
	public List<CustomerItemVO> getCustomerItemVOByFk_customer() throws DataSourceException {
		return CustomerItemDAO.findByFk_customer(this.idPart1, this.idPart2);
	}
	
	public boolean equals(Object o) {
		if (o == null) return false;
		if (o == this) return true;
		if (o.getClass() != this.getClass()) return false;
		CustomerVO other = (CustomerVO) o;
		if (this.idPart1 == null) {
			if (other.getIdPart1() != null) return false;
		} else {
			if (!this.idPart1.equals(other.getIdPart1())) return false;
		}
		if (this.idPart2 == null) {
			if (other.getIdPart2() != null) return false;
		} else {
			if (!this.idPart2.equals(other.getIdPart2())) return false;
		}
		if (this.name == null) {
			if (other.getName() != null) return false;
		} else {
			if (!this.name.equals(other.getName())) return false;
		}
		return true;
	}
	
}
