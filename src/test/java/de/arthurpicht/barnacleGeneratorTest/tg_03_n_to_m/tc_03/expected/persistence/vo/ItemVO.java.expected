// DO NOT CHANGE THIS FILE MANUALLY!
package de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.vo;

import de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.vof.ItemVOF;
import de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.dao.CustomerItemDAO;
import java.util.List;
import de.arthurpicht.barnacleGeneratorTest.connectionManager.DataSourceException;

public class ItemVO extends ItemVOF {
	
	public static final String TABLENAME = "item";
	public static final String ID1 = "id1";
	public static final String ID2 = "id2";
	public static final String DESCRIPTION = "description";
	
	public ItemVO(ItemPK itemPK) {
		this.id1=itemPK.getId1();
		this.id2=itemPK.getId2();
	}
	
	public ItemPK getPK() {
		ItemPK itemPK = new ItemPK(this.id1, this.id2);
		return itemPK;
	}
	
	public String getId1() {
		return this.id1;
	}
	
	public void setId1(String id1) {
		this.id1=id1;
	}
	
	public String getId2() {
		return this.id2;
	}
	
	public void setId2(String id2) {
		this.id2=id2;
	}
	
	public String getDescription() {
		return this.description;
	}
	
	public void setDescription(String description) {
		this.description=description;
	}
	
	public String toString() {
		return "de.arthurpicht.barnacleGeneratorTest.tg_03.tc_03.persistence.vo.ItemVO["
			+ "id1=" + this.id1 + "; "
			+ "id2=" + this.id2 + "; "
			+ "description=" + this.description
			+ "]";
	}
	
	public List<CustomerItemVO> getCustomerItemVOByFk_item() throws DataSourceException {
		return CustomerItemDAO.findByFk_item(this.id1, this.id2);
	}
	
	public boolean equals(Object o) {
		if (o == null) return false;
		if (o == this) return true;
		if (o.getClass() != this.getClass()) return false;
		ItemVO other = (ItemVO) o;
		if (this.id1 == null) {
			if (other.getId1() != null) return false;
		} else {
			if (!this.id1.equals(other.getId1())) return false;
		}
		if (this.id2 == null) {
			if (other.getId2() != null) return false;
		} else {
			if (!this.id2.equals(other.getId2())) return false;
		}
		if (this.description == null) {
			if (other.getDescription() != null) return false;
		} else {
			if (!this.description.equals(other.getDescription())) return false;
		}
		return true;
	}
	
}
